import kivy
from kivy.app import App
from kivy.uix.gridlayout import GridLayout
from kivy.uix.button import Button
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.boxlayout import BoxLayout
from kivy.core.window import Window
from matplotlib.figure import Figure
from kivy.uix.widget import Widget
from kivy.garden.matplotlib.backend_kivyagg import FigureCanvasKivyAgg

Window.size = (360, 640)


class MyGridLayout(GridLayout):
    # Initialize infinite keywords
    def __init__(self, **kwargs):
        # Call grid layout constructor
        super(MyGridLayout, self).__init__(**kwargs)

        # 第一行控件
        self.cols = 2
        self.input_dest = TextInput(multiline=False, hint_text="Enter your destination", size_hint_x=None, width=240,
                                    size_hint_y=None, height=60)
        self.add_widget(self.input_dest)
        self.go = Button(text="Go!", font_size=32, size_hint_x=None, width=120, size_hint_y=None, height=60)
        self.add_widget(self.go)
        # 画图的地方的控件
        self.draw_layout = BoxLayout(orientation='vertical', size_hint_y=None, height=580)
        self.draw_layout.cols = 1
        self.cat = Button(text="cat", font_size=32, size_hint_x=None, width=360, size_hint_y=None, height=500)
        # 最后一行的控件
        self.toolbar_layout = BoxLayout(orientation='horizontal', size_hint_y=None, height=80)
        self.toolbar_layout.cols = 2
        self.submit = Button(text="Submit", font_size=32, size_hint_x=None, width=180, size_hint_y=None, height=80)
        self.cool = Button(text="cool", font_size=32, size_hint_x=None, width=180, size_hint_y=None, height=80)
        self.submit.bind(on_press=self.press)
        self.toolbar_layout.add_widget(self.submit)
        self.toolbar_layout.add_widget(self.cool)

        self.draw_layout.add_widget(self.cat)
        self.draw_layout.add_widget(self.toolbar_layout)
        self.add_widget(self.draw_layout)

    def press(self, instance):
        # Print inputs
        print(f'Hello bo,you will do it')


class MyApp(App):
    def build(self):
        # Return a class instance
        return MyGridLayout()


if __name__ == '__main__':
    MyApp().run()



我编写了以下的代码，但是运行之后发现canvas控件并没有按照我设置的“figsize=(3.6,4)”来铺满界面，请问是为什么？
class MyBoxLayout(BoxLayout):
    def __init__(self, **kwargs):
        super(MyBoxLayout, self).__init__(**kwargs)

        # Create a matplotlib figure and plot a sin curve
        self.fig, self.ax = plt.subplots(figsize=(3.6, 4))
        x = np.linspace(0, 2 * np.pi, 100)
        y = np.sin(x)
        self.ax.plot(x, y)
        self.ax.axis('off')

        canvas = FigureCanvasKivyAgg(self.fig)
        box_layout = BoxLayout(orientation='vertical')
        toolbar_layout = BoxLayout(orientation='horizontal')
        toolbar_layout.cols = 2

        self.input_dest = TextInput(multiline=False, hint_text="Enter your destination", size_hint_x=None, width=240,
                                    size_hint_y=None, height=60)
        self.go = Button(text='GO!', font_size=32, size_hint_x=None, width=120, size_hint_y=None, height=60)
        self.go.bind(on_press=self.change_line_color)
        toolbar_layout.add_widget(self.input_dest)
        toolbar_layout.add_widget(self.go)

        box_layout.add_widget(canvas)
        box_layout.add_widget(toolbar_layout)
        self.add_widget(box_layout)